#include <iostream>

using namespace std;

extern int IterationCounter = 0; //Счетчик итераций рекурсии

void TowerSolver(int n, int start, int goal, int helping, int rootId) //Рекурсивная функция для решения задачи. Принимает в себя: число колец, началюную башню, вспомогательную башню, целевую башню, id предыдущей итерации рекурсии (для первой итерации считается равной 0)
{
    if (n > 0)
    {
        int id = ++IterationCounter; //Присваем id номер итерации

        //Строки 14-16: выводим информацию о итерации (id, значение n, позиция башни)
        cout << "Создание итерации с ID = " << id << " и n = " << n << ", ID родительской итерации: " << rootId << endl << endl; 
        cout << "Позиции башен:" << endl << "Стратовая: " << start << ", Дополнительная: " << helping << ", Целевая: " << goal << endl << endl;
        cout << "Создаем итерацию по первой ветке!" << endl << "------------------------" << endl;

        TowerSolver(n - 1, start, helping, goal, id); //Создаем новую итерацию по первой ветке. Меняем местами вспомогательную и целевую башни

        //Строки 21 - 25 - выводим сообщение о возврате в эту итерацию. Выводим информацию о итерации + действие для решения задачи
        cout << "Возвращаемся в ранее созданую итерацию с ID = " << id << " и n = " << n << endl;
        cout << "Позиции башен:" << endl << "Стратовая: " << start << ", Дополнительная: " << helping << ", Целевая: " << goal << endl << endl;
        cout << "Выводим действие для решения задачи: " << endl;
        cout << "(Переместить диск " << n << " с башни " << start << " на башню " << goal << ")" << endl << endl;
        cout << "Создаем итерацию по второй ветке!" << endl << "------------------------" << endl;

        TowerSolver(n - 1, helping, goal, start, id); //Создаем новую итерацию по второй ветке. Меняем местами вспомогательную и начальную башни

        cout << "Уничтожаем итерацию с ID = " << id << endl << "------------------------" << endl; //Сообщаем о уничтожении итерации, так как более веток не осталось
    }
    else
        cout << "Обнаружена итерация с n = 0. Поднимаемся на итерацию выше!" << endl << "------------------------" << endl;
}

int main()
{
    setlocale(LC_ALL, "RUS");
    int numberOfDisks;
    cout << "Введите кол-во дисков" << endl;
    cin >> numberOfDisks; //Получаем число дисков от пользователя

    if (numberOfDisks < 1) //Проверяем число на валидность
    {
        cout << "Число дисков должно быть больше или равно 1" << endl;
        return 0;  
    }

    cout << endl;
    TowerSolver(numberOfDisks, 1, 3, 2, 0); //Запускаем рекурсию
    cout << endl << "Всего потребовалось итераций: " << IterationCounter << endl;
}

#include <iostream>

using namespace std;

int ArrOfNum[500]; //Массив чисел, которые были получены в ходе рекурсивной функции
int GlobalCounter = 0; //Счетчик - сколько всего элементов находится в массиве выше

int isMet(int n)  //Функция, проверяющая, встречалось ли число в ходе выполнения рекурсивной функции
{
	bool flag = false;
	int LocalCounter = 0;

	while (LocalCounter < GlobalCounter && !flag) //Проходим по всему массиву, пока либо не дойдем до каонца, либо пока не найдем в нем заданный элемент
	{
		flag = ArrOfNum[LocalCounter] == n; //Переключаем флаг на true, если нашли элемент
		LocalCounter++; //Увличиваем счетчик
	}

	return flag; //Возвращаем значение флага
}

void PutIntoArray(int n) //Функция, которая заносит в массив встреченные в ходе рекурсии элементы
{
	ArrOfNum[GlobalCounter] = n; 
	GlobalCounter++;
}

int GetNumbers(int n) //Рекурсивная функция
{
	int num = 0;
	if (n <= 1) //Если n <= 1, то возвращаемое число = 1
		num = 1;
	else
		num = GetNumbers(n - 1) + GetNumbers(n - 2); //Иначе рассчитываем число по формуле

	if (!isMet(num)) //Если данное число еще никогда не было получено, то вывести его в консоль и записать в массив встреченных чисел
	{
		cout << num << " ";
		PutIntoArray(num);
	}

	return num; //Возвращаем число
}

int main()
{
	setlocale(LC_ALL,"RUS");
	int number;

	cout << "Сколько чисел фибоначчи надо вывести?" << endl;

	cin >> number; //Спрашиваем с пользователя кол-во чисел фибаначи, которое надо вывести

	if (number < 2) //Проверка колличества чисел на валидность
	{
		cout << "Кол - во элементов быть >= 2" << endl;
		return 0; 
	}

	cout << "Ваш ряд чисел:" << endl;
	cout << "0" << " " << "1" << " "; //Выводим первые два числа ряда фибаначи, так как они не получены путем сложения двух предыдущих
	if (number > 2)
		GetNumbers(number - 2); //Вызываем рекурсивную функцию, которая выведит остальной ряд. Так как первые два числа уже были выведены, то аргумент следует уменьшить на 2
	
}
